/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <Foundation/Foundation.h>

@class DVTDispatchLock, DVTFilePath, DVTNotificationToken, DVTObservingToken, DVTPerformanceMetric, DVTPlaygroundCommunicationListener, IDEConsoleAdaptor, IDEPlaygroundExecutionParameters, IDEPlaygroundPreparationParameters, NSError, NSMutableArray, IDEConsoleAdaptor;

struct SBBreakpointLocation;

@interface IDEPlaygroundExecutionSession : NSOperation

+ (id)keyPathsForValuesAffectingCanFinishExecution;
+ (id)playgroundExecutionPerformanceLogAspect;
+ (id)playgroundExecutionLogAspect;
+ (id)executableSetupLock;
+ (void)initialize;
@property(copy) id handlePlaygroundDataBlock; // @synthesize handlePlaygroundDataBlock=_handlePlaygroundDataBlock;
@property(copy) id executionWillFinishBlock; // @synthesize executionWillFinishBlock=_executionWillFinishBlock;
@property(copy) id reportResultBlock; // @synthesize reportResultBlock=_reportResultBlock;
@property(retain) IDEPlaygroundExecutionParameters *executionParameters; // @synthesize executionParameters=_executionParameters;
@property(readonly) DVTFilePath *inProgressSerializationFilePath; // @synthesize inProgressSerializationFilePath=_inProgressSerializationFilePath;
@property(copy) id executableSetupBlock; // @synthesize executableSetupBlock=_executableSetupBlock;
@property(nonatomic) struct SBThread *executionBreakpointThread; // @synthesize executionBreakpointThread=_executionBreakpointThread;
@property BOOL consoleAdaptorIsOpen; // @synthesize consoleAdaptorIsOpen=_consoleAdaptorIsOpen;
@property BOOL playgroundListenerSerializationInProgress; // @synthesize playgroundListenerSerializationInProgress=_playgroundListenerSerializationInProgress;
@property BOOL playgroundListenerConnectionIsOpen; // @synthesize playgroundListenerConnectionIsOpen=_playgroundListenerConnectionIsOpen;
@property(retain) IDEConsoleAdaptor *targetConsoleAdaptor; // @synthesize targetConsoleAdaptor=_targetConsoleAdaptor;
@property int internalState; // @synthesize internalState=_internalState;
@property(retain) DVTFilePath *serializedPlaygroundDataPath; // @synthesize serializedPlaygroundDataPath=_serializedPlaygroundDataPath;
@property(retain) NSError *serializationError; // @synthesize serializationError=_serializationError;
@property(readonly) IDEPlaygroundPreparationParameters *preparationParameters; // @synthesize preparationParameters=_preparationParameters;
@property unsigned long long state; // @synthesize state=_state;

- (void)cleanupExecutable;
- (void)destroyDebugger;
- (void)_stopListeningForPlaygroundInput;
- (void)_interruptExecutingPlaygroundSource;
- (void)cancel;
- (BOOL)canFinishExecution;
- (void)undesignateSessionWithCallbackQueue:(id)arg1 callback:(id)arg2;
- (void)designateSessionForExecutionParameters:(id)arg1;
- (BOOL)playgroundExecutionWillFinishBreakpointHitOnThread:(struct SBThread *)arg1 location:(struct SBBreakpointLocation *)arg2;
- (void)_executePlaygroundSource;
- (BOOL)executePlaygroundBreakpointHitOnThread:(struct SBThread *)arg1 location:(struct SBBreakpointLocation *)arg2;
- (_Bool)shouldCancelExpressionEvaluationForPhase:(int)arg1;
- (void)_terminateProcess;
- (BOOL)handleInternalSessionEvent:(unsigned int)arg1;
- (BOOL)handleProcessEvent:(unsigned int)arg1;
- (void *)listenForEvents;
- (void)_setSessionThreadID:(struct _opaque_pthread_t *)arg1;
- (void)main;
- (id)_setupConsoleAdaptor;
- (void)_hookUpRealDataHandlingBlocks;
- (void)_flushPendingDataFromPreparation;
- (void)_setupPreparationDataHandlingBlocks;
- (void)_handleError:(id)arg1;
- (id)_generateSerializationFilePathWithError:(id *)arg1;
- (id)initWithPreparationParameters:(id)arg1 executableSetupBlock:(id)arg2 launcher:(void)arg3;

@end
